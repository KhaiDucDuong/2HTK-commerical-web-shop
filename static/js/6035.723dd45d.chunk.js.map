{"version":3,"file":"static/js/6035.723dd45d.chunk.js","mappings":"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","sources":["components/Paging.jsx"],"sourcesContent":["import { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst LEFT_PAGE = \"LEFT\";\r\nconst RIGHT_PAGE = \"RIGHT\";\r\n\r\nconst range = (from, to, step = 1) => {\r\n  let i = from;\r\n  const range = [];\r\n\r\n  while (i <= to) {\r\n    range.push(i);\r\n    i += step;\r\n  }\r\n\r\n  return range;\r\n};\r\n\r\nclass Paging extends Component {\r\n  constructor(props) {\r\n    super();\r\n    const {\r\n      totalRecords = null,\r\n      pageLimit = 30,\r\n      pageNeighbours = 0,\r\n      sizing = \"\",\r\n      alignment = \"\",\r\n    } = props;\r\n    this.sizing = typeof sizing === \"string\" ? sizing : \"\";\r\n    this.alignment = typeof alignment === \"string\" ? alignment : \"\";\r\n    this.pageLimit = typeof pageLimit === \"number\" ? pageLimit : 30;\r\n    this.totalRecords = typeof totalRecords === \"number\" ? totalRecords : 0;\r\n\r\n    this.pageNeighbours =\r\n      typeof pageNeighbours === \"number\"\r\n        ? Math.max(0, Math.min(pageNeighbours, 2))\r\n        : 0;\r\n\r\n    this.totalPages = Math.ceil(this.totalRecords / this.pageLimit);\r\n\r\n    this.state = { currentPage: 1 };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.gotoPage(1);\r\n  }\r\n\r\n  gotoPage = (page) => {\r\n    const { onPageChanged = (f) => f } = this.props;\r\n\r\n    const currentPage = Math.max(0, Math.min(page, this.totalPages));\r\n\r\n    const paginationData = {\r\n      currentPage,\r\n      totalPages: this.totalPages,\r\n      pageLimit: this.pageLimit,\r\n      totalRecords: this.totalRecords,\r\n    };\r\n\r\n    this.setState({ currentPage }, () => onPageChanged(paginationData));\r\n  };\r\n\r\n  handleClick = (page, evt) => {\r\n    evt.preventDefault();\r\n    this.gotoPage(page);\r\n  };\r\n\r\n  handleMoveLeft = (evt) => {\r\n    evt.preventDefault();\r\n    this.gotoPage(this.state.currentPage - this.pageNeighbours * 2 - 1);\r\n  };\r\n\r\n  handleMoveRight = (evt) => {\r\n    evt.preventDefault();\r\n    this.gotoPage(this.state.currentPage + this.pageNeighbours * 2 + 1);\r\n  };\r\n\r\n  fetchPageNumbers = () => {\r\n    const totalPages = this.totalPages;\r\n    const currentPage = this.state.currentPage;\r\n    const pageNeighbours = this.pageNeighbours;\r\n\r\n    const totalNumbers = this.pageNeighbours * 2 + 3;\r\n    const totalBlocks = totalNumbers + 2;\r\n\r\n    if (totalPages > totalBlocks) {\r\n      let pages = [];\r\n\r\n      const leftBound = currentPage - pageNeighbours;\r\n      const rightBound = currentPage + pageNeighbours;\r\n      const beforeLastPage = totalPages - 1;\r\n\r\n      const startPage = leftBound > 2 ? leftBound : 2;\r\n      const endPage = rightBound < beforeLastPage ? rightBound : beforeLastPage;\r\n\r\n      pages = range(startPage, endPage);\r\n\r\n      const pagesCount = pages.length;\r\n      const singleSpillOffset = totalNumbers - pagesCount - 1;\r\n\r\n      const leftSpill = startPage > 2;\r\n      const rightSpill = endPage < beforeLastPage;\r\n\r\n      const leftSpillPage = LEFT_PAGE;\r\n      const rightSpillPage = RIGHT_PAGE;\r\n\r\n      if (leftSpill && !rightSpill) {\r\n        const extraPages = range(startPage - singleSpillOffset, startPage - 1);\r\n        pages = [leftSpillPage, ...extraPages, ...pages];\r\n      } else if (!leftSpill && rightSpill) {\r\n        const extraPages = range(endPage + 1, endPage + singleSpillOffset);\r\n        pages = [...pages, ...extraPages, rightSpillPage];\r\n      } else if (leftSpill && rightSpill) {\r\n        pages = [leftSpillPage, ...pages, rightSpillPage];\r\n      }\r\n\r\n      return [1, ...pages, totalPages];\r\n    }\r\n\r\n    return range(1, totalPages);\r\n  };\r\n\r\n  render() {\r\n    if (!this.totalRecords) return null;\r\n\r\n    if (this.totalPages === 1) return null;\r\n\r\n    const { currentPage } = this.state;\r\n    const pages = this.fetchPageNumbers();\r\n\r\n    return (\r\n      <nav aria-label=\"Page navigation\">\r\n        <ul className={`pagination ${this.sizing} ${this.alignment}`}>\r\n          {pages.map((page, index) => {\r\n            if (page === LEFT_PAGE)\r\n              return (\r\n                <li key={index} className=\"page-item\">\r\n                  <button\r\n                    className=\"page-link\"\r\n                    aria-label=\"Previous\"\r\n                    onClick={this.handleMoveLeft}\r\n                  >\r\n                    <span aria-hidden=\"true\">&laquo;</span>\r\n                    <span className=\"sr-only\">Previous</span>\r\n                  </button>\r\n                </li>\r\n              );\r\n\r\n            if (page === RIGHT_PAGE)\r\n              return (\r\n                <li key={index} className=\"page-item\">\r\n                  <a\r\n                    className=\"page-link\"\r\n                    href=\"#!\"\r\n                    aria-label=\"Next\"\r\n                    onClick={this.handleMoveRight}\r\n                  >\r\n                    <span aria-hidden=\"true\">&raquo;</span>\r\n                    <span className=\"sr-only\">Next</span>\r\n                  </a>\r\n                </li>\r\n              );\r\n\r\n            return (\r\n              <li\r\n                key={index}\r\n                className={`page-item${currentPage === page ? \" active\" : \"\"}`}\r\n              >\r\n                <a\r\n                  className=\"page-link\"\r\n                  href=\"#!\"\r\n                  onClick={(e) => this.handleClick(page, e)}\r\n                >\r\n                  {page}\r\n                </a>\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nPaging.propTypes = {\r\n  totalRecords: PropTypes.number.isRequired,\r\n  pageLimit: PropTypes.number,\r\n  pageNeighbours: PropTypes.number,\r\n  onPageChanged: PropTypes.func,\r\n  sizing: PropTypes.string,\r\n};\r\n\r\nexport default Paging;\r\n"],"names":["LEFT_PAGE","RIGHT_PAGE","range","from","to","step","arguments","length","undefined","i","push","Paging","Component","constructor","props","super","gotoPage","page","onPageChanged","f","this","currentPage","Math","max","min","totalPages","paginationData","pageLimit","totalRecords","setState","handleClick","evt","preventDefault","handleMoveLeft","state","pageNeighbours","handleMoveRight","fetchPageNumbers","totalNumbers","pages","leftBound","rightBound","beforeLastPage","startPage","endPage","singleSpillOffset","leftSpill","rightSpill","leftSpillPage","rightSpillPage","extraPages","sizing","alignment","ceil","componentDidMount","render","_jsx","children","className","concat","map","index","_jsxs","onClick","href","e"],"sourceRoot":""}